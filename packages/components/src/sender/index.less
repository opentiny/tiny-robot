@import './vars.less';

// 主要组件样式
.tiny-sender {
  position: relative;
  color: var(--tr-sender-text-color);

  // 模式切换的主过渡效果
  transition: all 0.3s cubic-bezier(0.25, 1, 0.5, 1);

  // 单行到多行模式的切换过渡
  &.mode-single,
  &.mode-multiple {
    transition: all 0.3s cubic-bezier(0.25, 1, 0.5, 1);
  }

  // 自动切换模式时的过渡
  &.is-auto-switching {

    .tiny-input__inner,
    .tiny-textarea__inner {
      transition: all 0.3s cubic-bezier(0.25, 1, 0.5, 1);
    }

    .tiny-sender__footer-slot,
    .tiny-sender__actions-slot,
    .tiny-sender__toolbar {
      transition: all 0.3s cubic-bezier(0.25, 1, 0.5, 1);
    }
  }

  // TinyUI 输入框调整
  .tiny-input__prefix {
    left: 0;
    display: flex;
    align-items: center;
  }

  .tiny-input__inner {
    font-size: var(--tr-sender-input-font-size);
    border: none;
    padding-left: 0;
    padding-right: 16px;
    background-color: var(--tr-sender-bg-color);
    color: var(--tr-sender-text-color);
    min-height: var(--tr-sender-input-height); // 固定高度以减少跳动
    line-height: var(--tr-sender-textarea-line-heigh); // 行高保持一致

    &::placeholder {
      color: var(--tr-sender-text-color-secondary);
    }
  }

  .tiny-input.is-disabled .tiny-input__inner {
    border: none;
    background: var(--tr-sender-bg-color);
    color: var(--tr-sender-text-color-secondary);
  }

  .tiny-textarea.is-disabled .tiny-textarea__inner {
    border: none;
    background: var(--tr-sender-bg-color);
    color: var(--tr-sender-text-color-secondary);
  }

  .tiny-input__suffix {
    right: 0;
    display: flex;
    align-items: center;
  }

  .tiny-textarea__inner {
    font-size: var(--tr-sender-input-font-size);
    border: none;
    min-height: var(--tr-sender-textarea-min-height); // 最小高度与单行保持一致
    padding: 0;
    background-color: var(--tr-sender-bg-color);
    color: var(--tr-sender-text-color);
    line-height: var(--tr-sender-textarea-line-height); // 行高与单行保持一致

    &::placeholder {
      color: var(--tr-sender-text-color-secondary);
    }
  }

  .tiny-textarea:before,
  .tiny-textarea:after {
    display: none;
  }

  // 内容容器 - 包含输入框、工具栏等
  &__container {
    display: flex;
    flex-direction: column;
    width: 100%;
    transition: all 0.3s ease-out;
    min-height: var(--tr-sender-container-min-height); // 设置最小高度避免内容区域跳变
  }

  // 输入行 - 横向布局，包含prefix、content、actions
  &__input-row {
    display: flex;
    align-items: stretch;
    width: 100%;
    transition: height 0.3s ease-out;
    min-height: var(--tr-sender-container-min-height); // 与容器一致的最小高度
  }

  // 头部插槽
  &__header-slot {
    width: 100%;
    max-height: var(--tr-sender-header-max-height);
    min-height: var(--tr-sender-header-min-height);
    overflow-y: auto;
    border-radius: var(--tr-sender-border-radius) var(--tr-sender-border-radius) 0 0;
    background: var(--tr-sender-bg-color);
    padding: var(--tr-sender-header-padding);
    margin-bottom: var(--tr-sender-gap);
    z-index: 1;
    border-bottom: 1px solid var(--tr-sender-border-color);
  }

  // 底部插槽
  &__footer-slot {
    width: 100%;
    border-radius: 0 0 var(--tr-sender-border-radius) var(--tr-sender-border-radius);
    background: var(--tr-sender-footer-bg);
    z-index: 1;
    min-height: var(--tr-sender-footer-min-height);

    &.tiny-sender__bottom-row {
      padding: var(--tr-sender-bottom-row-padding-top) var(--tr-sender-padding-right) var(--tr-sender-padding-bottom) var(--tr-sender-padding-left);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .suggestion-item {
      padding: var(--tr-sender-padding-top) var(--tr-sender-padding-right) var(--tr-sender-padding-bottom) var(--tr-sender-padding-left);
      cursor: pointer;
      transition: background-color var(--tr-sender-transition-duration);

      &:hover {
        background: var(--tr-sender-footer-hover);
      }
    }
  }

  // 底部左侧区域
  &__footer-left {
    display: flex;
    align-items: center;
    gap: var(--tr-sender-gap);
  }

  // 底部右侧区域
  &__footer-right {
    display: flex;
    align-items: center;
    gap: var(--tr-sender-gap);
  }

  // 输入区域
  &__input-wrapper {
    position: relative;
    width: 100%;
    margin: var(--tr-sender-gap) 0;
    border: none;
    padding: 0;
    border-radius: var(--tr-sender-border-radius);
    box-shadow: var(--tr-sender-box-shadow);
    background-color: var(--tr-sender-bg-color);
    display: flex;
    flex-direction: column;
    min-height: var(--tr-sender-input-min-height); // 设置最小高度

    .tiny-input__count {
      display: flex;
    }

    .tiny-input__count-inner {
      height: 22px;
      right: 0;
    }
  }

  // 内容区域
  &__content-area {
    flex: var(--tr-sender-content-flex-grow) 1 var(--tr-sender-content-min-width);
    min-width: var(--tr-sender-content-min-width);
    padding: var(--tr-sender-content-padding);
    position: relative;
    overflow: hidden;
    min-height: var(--tr-sender-input-height);

    // 当前置插槽存在时，调整内边距
    .has-prefix & {
      padding: var(--tr-sender-content-padding-with-prefix);
    }

    .has-header & {
      padding-top: 0;
    }

    .tiny-textarea,
    .tiny-input {
      width: 100%;
      transition: all 0.3s cubic-bezier(0.25, 1, 0.5, 1);
    }
  }

  // 前缀区域
  &__prefix-slot {
    width: var(--tr-sender-prefix-width);
    min-width: var(--tr-sender-prefix-min-width);
    flex: 0 0 var(--tr-sender-prefix-width);
    display: flex;
    align-items: start;
    justify-content: center;
    background: var(--tr-sender-bg-color);
    border-radius: var(--tr-sender-border-radius) 0 0 var(--tr-sender-border-radius);
    transition: background-color var(--tr-sender-transition-duration);
    padding-top: var(--tr-sender-prefix-padding-top);
    padding-left: var(--tr-sender-prefix-padding-left);
    padding-right: calc(var(--tr-sender-padding-right) / 2);

    &:hover {
      background-color: var(--tr-sender-prefix-hover-bg);
    }
  }

  // 动作区域
  &__actions-slot {
    display: flex;
    align-items: center;
    gap: var(--tr-sender-actions-gap);
    margin-left: auto;
    flex: 0 0 auto;
    min-width: var(--tr-sender-actions-min-width);
    padding-right: var(--tr-sender-actions-padding-right);
    transition:
      opacity 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      transform 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      visibility 0.3s step-end;
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);

    .button-icon {
      font-size: var(--tr-sender-actions-icon-size);
      transition: transform var(--tr-sender-transition-duration);

      &:hover {
        transform: scale(1.1);
      }
    }
  }

  &__toolbar {
    transition:
      opacity 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      transform 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      visibility 0.3s step-end;
    will-change: transform, opacity;
  }

  &__bottom-row {
    padding: var(--tr-sender-bottom-row-padding-top) var(--tr-sender-padding-right) var(--tr-sender-padding-bottom) var(--tr-sender-padding-left);
  }

  // 字数限制
  &__word-limit {
    font-size: var(--tr-sender-font-size);
    font-weight: 400;
    line-height: 22px;
    text-align: left;
    letter-spacing: 0;
    color: var(--tr-sender-word-limit-color);
  }

  // 输入建议
  &__suggestions {
    position: absolute;
    bottom: 100%;
    left: 0;
    width: 100%;
    background: var(--tr-sender-bg-color);
    border: 1px solid var(--tr-sender-border-color);
    border-radius: var(--tr-sender-border-radius);
    box-shadow: var(--tr-sender-box-shadow);
    z-index: 10;
    max-height: 200px;
    overflow-y: auto;
  }

  // 错误提示
  &__error {
    position: absolute;
    bottom: var(--tr-sender-error-bottom-offset);
    left: 0;
    color: var(--tr-sender-error-color);
    font-size: var(--tr-sender-font-size-small);
  }

  // 禁用状态
  &.is-disabled {
    opacity: var(--tr-sender-disabled-opacity);
    cursor: not-allowed;
  }

  // 加载状态
  &.is-loading {
    cursor: wait;

    .tiny-input__inner {
      cursor: wait;
      background-color: var(--tr-sender-bg-color);
    }

    .tiny-textarea__inner {
      cursor: wait;
      background-color: var(--tr-sender-bg-color);
    }
  }

  // 错误状态
  &.has-error {
    border-color: var(--tr-sender-error-color);
  }

  // 响应式设计
  @media (max-width: 768px) {
    &__prefix-slot {
      width: var(--tr-sender-prefix-min-width);
      min-width: var(--tr-sender-prefix-min-width);
    }

    &__actions-slot {
      padding: 0 calc(var(--tr-sender-padding-right) / 2);
      gap: calc(var(--tr-sender-actions-gap) / 2);
      min-width: auto;
    }

    &__header-slot,
    &__footer-slot {
      padding: calc(var(--tr-sender-padding-top) / 2);
    }

    &__content-area {
      min-width: var(--tr-sender-content-min-width);
    }
  }

  // 模式切换的过渡动画
  // 单行模式
  &.mode-single .tiny-sender__actions-slot {
    opacity: 1;
    visibility: visible;
    transform: translateY(-50%);
    transition:
      opacity 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      transform 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      visibility 0s;
    z-index: 2;
  }

  // 多行模式 - actions 消失
  &.mode-multiple .tiny-sender__actions-slot {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-50%) translateX(10px);
    transition:
      opacity 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      transform 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      visibility 0s 0.3s;
    z-index: -1;
  }

  // 多行模式 - toolbar 出现
  &.mode-multiple .tiny-sender__toolbar {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
    transition:
      opacity 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      transform 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      visibility 0s;
    z-index: 2;
    position: relative;
  }

  // 单行模式 - toolbar 消失
  &.mode-single .tiny-sender__toolbar {
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
    transition:
      opacity 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      transform 0.3s cubic-bezier(0.25, 1, 0.5, 1),
      visibility 0s 0.3s;
    z-index: -1;
    height: 0;
    overflow: hidden;
  }
}

// 模板编辑器样式
.template-editor {
  width: 100%;
  min-height: var(--tr-sender-template-editor-min-height);
  line-height: var(--tr-sender-template-editor-line-height);
  border-radius: var(--tr-sender-template-editor-border-radius);
  word-break: break-word;
  word-wrap: break-word;
  /* 保持空格和换行符 */
  white-space: pre-wrap;
  outline: none;
  display: block;
  box-sizing: border-box;
  /* 确保长单词可以折行 */
  overflow-wrap: break-word;
  /* 确保文本左对齐 */
  text-align: left;
  /* 防止内容溢出 */
  overflow: hidden;
  /* 超出部分显示省略号 */
  text-overflow: ellipsis;


  .template-field {
    display: inline;
    min-width: var(--tr-sender-template-field-min-width);
    max-width: none;
    background: var(--tr-sender-template-field-bg);
    padding: var(--tr-sender-template-field-padding);
    margin: var(--tr-sender-template-field-margin);
    border-radius: var(--tr-sender-template-field-border-radius);
    cursor: text;
    transition: background-color var(--tr-sender-transition-duration);
    white-space: nowrap;
    /* 允许在任意字符处断行（当设置为多行时） */
    word-break: break-word;
    word-wrap: break-word;
    box-sizing: border-box;
    overflow-wrap: break-word;
    line-height: var(--tr-sender-template-field-line-height);
    position: relative;
    vertical-align: middle;
    /* 启用连字符，帮助长英文词的折行 */
    hyphens: auto;

    /* 明确设置内容为空白时的行为 */
    &:empty {
      /* 确保空字段有足够高度 */
      min-height: var(--tr-sender-template-field-min-height-empty);
      /* 空字段使用inline-block确保有区域 */
      display: inline-block;
      /* 与字段自身和周围文本保持一致的垂直对齐 */
      vertical-align: middle;
      line-height: var(--tr-sender-template-field-line-height);
    }

    &:hover {
      background-color: var(--tr-sender-template-field-bg-hover);
    }

    &:empty::before {
      content: attr(data-placeholder);
      color: var(--tr-sender-template-field-placeholder-color);
      cursor: text;
      user-select: none;
      position: absolute;
      left: var(--tr-sender-template-field-placeholder-left);
      top: 50%;
      transform: translateY(-50%);
      pointer-events: none;
    }
  }
}

// ActionButtons组件样式
.action-buttons {
  display: flex;
  gap: var(--tr-sender-gap);
  padding-left: var(--tr-sender-actions-padding-left);
  padding-right: var(--tr-sender-actions-padding-right);
  background: var(--tr-sender-bg-color);
  border-radius: var(--tr-sender-border-radius);
  align-items: center;

  /* 按钮图标统一样式 */
  .button-icon {
    font-size: var(--tr-sender-icon-size);
    transition: transform var(--tr-sender-transition-duration);
    fill: var(--tr-sender-button-icon-color);
    color: var(--tr-sender-button-icon-color);
    margin-right: 0;

    &:hover {
      transform: scale(1.1);
      border-radius: 8px;
      background-color: var(--tr-sender-prefix-hover-bg);
    }
  }

  .submit-button {
    margin-left: 0;
  }

  /* 禁用状态样式 */
  .is-disabled {
    opacity: var(--tr-sender-action-button-disabled-opacity);
    cursor: not-allowed;
  }
}

.button-content {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  position: relative;

  // 当只有图标时保持居中
  &:empty {
    display: block;
  }
}

.shortcut-hint {
  position: absolute;
  bottom: -16px;
  font-size: var(--tr-sender-font-size-extra-small);
  color: var(--tr-sender-text-color-secondary);
  white-space: nowrap;
  user-select: none;
}

/** 处理相邻按钮元素边界  */
.tiny-button+.tiny-button {
  margin-left: 0;
}

/* 模式切换过渡动画 */
.tiny-sender-slide-up-enter-active,
.tiny-sender-slide-up-leave-active,
.tiny-sender-slide-down-enter-active,
.tiny-sender-slide-down-leave-active {
  overflow: hidden;
  max-height: var(--tr-sender-transition-max-height);
}

.tiny-sender-slide-up-enter-from,
.tiny-sender-slide-up-leave-to {
  opacity: 0;
  transform: translateY(10px);
  max-height: 0;
}

.tiny-sender-slide-down-enter-from,
.tiny-sender-slide-down-leave-to {
  opacity: 0;
  transform: translateY(-10px);
  max-height: 0;
}